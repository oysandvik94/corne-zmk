/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
#include "includes/settings.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"

/ {
   behaviors {
          mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <100>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
            uc_ae: uc_ae {
                label = "UNICODE_AE";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                tap-ms = <0>;
                wait-ms = <0>;
                bindings
                    = <&macro_press &kp LCTRL &kp LSHFT>
                    , <&macro_tap &kp U>
                    , <&macro_release &kp LCTRL &kp LSHFT>
                    , <&macro_tap &kp N0 &kp N0 &kp E &kp N6 &kp SPC>
                    ;
            }; 
            uc_a: uc_a {
                label = "UNICODE_A";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                tap-ms = <0>;
                wait-ms = <0>;
                bindings
                    = <&macro_press &kp LCTRL &kp LSHFT>
                    , <&macro_tap &kp U>
                    , <&macro_release &kp LCTRL &kp LSHFT>
                    , <&macro_tap &kp N0 &kp N0 &kp E &kp N5 &kp SPC>
                    ;
            }; 
            uc_o: uc_o {
                label = "UNICODE_O";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                tap-ms = <0>;
                wait-ms = <0>;
                bindings
                    = <&macro_press &kp LCTRL &kp LSHFT>
                    , <&macro_tap &kp U>
                    , <&macro_release &kp LCTRL &kp LSHFT>
                    , <&macro_tap &kp N0 &kp N0 &kp F &kp N8 &kp SPC>
                    ;
            }; 
        };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &trans &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U &kp Y &kp SEMI &trans
                &trans &hm_l LGUI A &hm_l LALT R &hm_l LCTL S &hm_shift_l LSFT T &kp G   &kp M &hm_shift_r RSFT N &hm_r RCTL E &hm_r RALT I &hm_r RGUI O &trans
                &trans &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H &kp COMMA &kp DOT &kp FSLH &trans
                &lt 1 TAB &lt 2 SPACE &kp ESC &kp BSPC &lt 2 RET &lt 1 DEL
            >;
        };

        lower_layer {
            bindings = <
                &trans &kp EXCL &kp PRCNT &kp ASTERISK &kp HASH &kp N5   &kp CARET &kp LPAR &kp RPAR &kp TILDE &kp DQT &trans
                &trans &kp DOLLAR &kp EXCLAMATION &kp PLUS &kp EQUAL &kp PIPE   &kp AMPERSAND &kp LBRC &kp RBRC &kp SQT &kp GRAVE &trans
                &trans &trans &kp AT_SIGN &kp MINUS &kp UNDER &trans   &trans &kp LBKT &kp RBKT &kp CARET &kp BSLH &trans
                &kp LGUI &trans &kp SPACE &kp RET &trans &kp RALT
            >;
        };

        raise_layer {
            bindings = <
                &trans &kp EXCL &kp N7 &kp N8 &kp N9 &kp PRCNT   &kp CARET &uc_ae &uc_o &uc_a &kp RPAR &trans
                &trans &kp LGUI &hm_l LALT N4 &hm_l LCTL N5 &hm_shift_l LSFT N6 &trans   &kp LEFT &hm_shift_r RSFT DOWN &hm_r RCTL UP &hm_r RALT RIGHT &hm_r RGUI BSLH &trans
                &trans &trans &kp N1 &kp N2 &kp N3 &trans   &kp UNDER &kp PLUS &kp LBRC &kp RBRC &kp PIPE &trans
                &kp LGUI &kp N0 &caps_word &kp RET &trans &kp RALT
            >;
        };
    };
};

