/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
#include "includes/settings.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"
#include "keys_nb.h"

&caps_word {
    /delete-property/ ignore-modifiers;
    continue-list = <NB_UNDER NB_MINUS DELETE BACKSPACE>;
};

&lt {
        require-prior-idle-ms = <0>;
        tapping-term-ms = <125>;
        quick-tap-ms = <0>;
};

/ {
    behaviors {
        ncomma: norwegian_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&hm_r RCTL NB_COMMA>, <&hm_r RCTL NB_LESS_THAN>;
            mods = <(MOD_LSFT)>;
        };
        ndot: norwegian_dot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&hm_r LALT NB_DOT>, <&hm_r LALT NB_GREATER_THAN>;
            mods = <(MOD_LSFT)>;
        };
        nfslasn: norwegian_forward_slash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&hm_r RGUI NB_FSLH>, <&hm_r RGUI NB_QUESTION>;
            mods = <(MOD_LSFT)>;
        };
        nsemi: norwegian_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NB_SEMI>, <&kp NB_COLON>;
            mods = <(MOD_LSFT)>;
        };
    };
    macros {
        tilde: tilde {
               label = "TILDE";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               tap-ms = <0>;
               wait-ms = <0>;
               bindings
                   = <&macro_tap &kp NB_TILDE>
                   , <&macro_tap &kp NB_TILDE>
                   ;
       };
       grave: grave {
              label = "grave";
              compatible = "zmk,behavior-macro";
              #binding-cells = <0>;
              tap-ms = <0>;
              wait-ms = <0>;
              bindings
                   = <&macro_tap &kp NB_GRAVE>
                   , <&macro_tap &kp NB_GRAVE>
               ;
        };
       caret: caret {
              label = "caret";
              compatible = "zmk,behavior-macro";
              #binding-cells = <0>;
              tap-ms = <0>;
              wait-ms = <0>;
              bindings
                   = <&macro_tap &kp NB_CARET>
                   , <&macro_tap &kp NB_CARET>
               ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &trans &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U &kp Y &nsemi &trans
                &trans &kc A &kp R &kp S &kp T &kp G   &kp M &kp N &kp E &kp I &kp O &trans
                &trans &hm_l LGUI Z &hm_l LALT X &hm_l LCTL C &hm_shift_l LSFT D &kp V   &kp K &hm_shift_r RSFT H &ncomma &ndot &nfslasn &trans
                &lt 1 TAB &lt 2 SPACE &lt 3 ESC &kp BSPC &lt 2 RET &lt 1 DEL
            >;
        };

        symbol_layer {
            bindings = <
                &trans &kp NB_EXCL &kp NB_PRCNT &kp NB_ASTERISK &kp NB_HASH &kp N5   &kp NB_CARET &kp NB_LPAR &kp NB_RPAR &tilde &kp NB_DQT &trans
                &trans &kp NB_DOLLAR &kp NB_PLUS &kp NB_EXCLAMATION  &kp NB_EQUAL &kp NB_PIPE   &kp NB_AMPERSAND &kp NB_LBRC &kp NB_RBRC &kp NB_SQT &grave &trans
                &trans &trans &kp NB_AT_SIGN &kp NB_MINUS &kp NB_UNDER &trans   &trans &kp NB_LBKT &kp NB_RBKT &caret &kp NB_BSLH &trans
                &kp LGUI &trans &kp SPACE &kp RET &trans &kp RALT
            >;
        };

        number_layer {
            bindings = <
                &trans &kp NB_EXCL &kp N7 &kp N8 &kp N9 &kp NB_PRCNT   &kp NB_CARET &kp NB_AE &kp NB_O_SLASH &kp NB_A_RING &kp NB_RPAR &trans
                &trans &kp LGUI &hm_l LALT N4 &hm_l LCTL N5 &hm_shift_l LSFT N6 &trans   &kp LEFT &hm_shift_r RSFT DOWN &hm_r RCTL UP &hm_r LALT RIGHT &hm_r RGUI NB_BSLH &trans
                &trans &trans &kp N1 &kp N2 &kp N3 &trans   &kp UNDER &kp PLUS &kp LBRC &kp RBRC &kp PIPE &trans
                &kp LGUI &kp N0 &caps_word &kp RET &trans &kp RALT
            >;
        };

        bluetooth_layer {
            bindings = <
                &trans &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
                &trans &trans &bt BT_SEL 3 &bt BT_SEL 4 &bt N6 &trans   &trans &trans &trans &trans &trans &trans
                &trans &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans   &trans &bt BT_CLR &trans &trans &trans &trans
                            &trans &trans &trans   &trans &trans &trans

            >;
        };

    };
};

